map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
}

server {
  listen 80;
  server_name emby.lab.local;

  location / {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass http://emby:8096;
  }

  access_log off;
  error_log  /var/log/nginx/error.log error;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name photo.lab.local;
    client_max_body_size 500M;

    ssl_certificate         /etc/nginx/client.pem;
    ssl_certificate_key     /etc/nginx/client.key;
    ssl_client_certificate  /etc/nginx/ca.pem;


    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;

      proxy_pass http://photoprism:2342;

      proxy_buffering off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      client_max_body_size 500M;
    }
   access_log off;
   error_log  /var/log/nginx/error.log error;
 }

server {
  listen 443 ssl;
  server_name agent.lab.local;

  ssl_certificate         /etc/nginx/client.pem;
  ssl_certificate_key     /etc/nginx/client.key;
  ssl_client_certificate  /etc/nginx/ca.pem;
  ssl_verify_client      optional;

  location / {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass https://portainer_agent:9001;
  }

  access_log off;
  error_log  /var/log/nginx/error.log error;
}

server {
  listen 80;
  server_name ha.lab.local;

  location / {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass http://homeassistant:8123;
  }

  location /api/websocket {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass http://homeassistant:8123;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }

  access_log off;
  error_log  /var/log/nginx/error.log error;
}

server {
  listen 443 ssl;
  server_name budget.lab.local;

  ssl_certificate         /etc/nginx/client.pem;
  ssl_certificate_key     /etc/nginx/client.key;
  ssl_client_certificate  /etc/nginx/ca.pem;
  ssl_verify_client      optional;

  location / {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass https://actual_server:5006;
    proxy_set_header Cross-Origin-Embedder-Policy require-corp;
    proxy_set_header Cross-Origin-Opener-Policy same-origin;
  }

  access_log off;
  error_log  /var/log/nginx/error.log error;
}

server {
    listen 80;
    server_name openai.lab.local;

    proxy_set_header Host api.openai.com;
    proxy_http_version 1.1;

    proxy_busy_buffers_size   512k;
    proxy_buffers   4 512k;
    proxy_buffer_size   256k;

    location ~* ^\/v1\/((engines\/.+\/)?(?:(chat\/completions|completions|edits|moderations|answers|embeddings)|images\/generations)|models)$ {
        proxy_ssl_server_name on;
        proxy_pass https://api.openai.com;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header  Authorization;
        proxy_set_header Content-Type "application/json";
        proxy_set_header Connection '';
        client_body_buffer_size 4m;
    }

}

server {
  listen 80;
  server_name chat.lab.local;

  location / {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass http://librechat:3080;
  }

  access_log off;
  error_log  /var/log/nginx/error.log error;
}

server {
  listen 80;
  server_name radarr.lab.local;

  location / {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass http://radarr:7878;
  }

  access_log off;
  error_log  /var/log/nginx/error.log error;
}

server {
  listen 80;
  server_name deluge.lab.local;

  location / {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass http://deluge:8112;
  }

  access_log off;
  error_log  /var/log/nginx/error.log error;
}

server {
  listen 80;
  server_name prowlarr.lab.local;

  location / {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass http://prowlarr:9696;
  }

  access_log off;
  error_log  /var/log/nginx/error.log error;
}

server {
  listen 80;
  server_name sonarr.lab.local;

  location / {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass http://sonarr:8989;
  }

  access_log off;
  error_log  /var/log/nginx/error.log error;
}

server {
  listen 80;
  server_name qbittorrent.lab.local;

  location / {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass http://qbittorrent:8080;
  }

  access_log off;
  error_log  /var/log/nginx/error.log error;
}

# Default
server {
  listen 80 default_server;

  server_name _;
  root /var/www/html;

  charset UTF-8;

  error_page 404 /backend-not-found.html;
  location = /backend-not-found.html {
    allow   all;
  }
  location / {
    return 404;
  }

  access_log off;
  log_not_found off;
  error_log  /var/log/nginx/error.log error;
}
