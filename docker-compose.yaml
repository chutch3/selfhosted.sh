services:
  reverseproxy:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${PWD}/reverseproxy/templates/conf.d/enabled:/etc/nginx/templates/enabled:ro
      - ${PWD}/reverseproxy/templates/includes:/etc/nginx/templates/includes:ro
      - ${PWD}/reverseproxy/backend-not-found.html:/var/www/html/backend-not-found.html:ro
      - ${PWD}/reverseproxy/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ${PWD}/certs/dhparam.pem:/etc/nginx/ssl/dhparam.pem:ro
      - ${PWD}/scripts/sleep.sh:/docker-entrypoint.d/99-sleep.sh:ro
    restart: always
    command: [
      "nginx",
      "-g",
      "daemon off;"
    ]
    env_file:
      - path: .env
        required: true
      - path: .domains
        required: true
    labels:
      - sh.acme.autoload.domain=${BASE_DOMAIN}
    depends_on:
      - acme
    networks:
      - reverseproxy
    profiles:
      - core

  acme:
    image: neilpang/acme.sh
    container_name: acme.sh
    command: daemon
    volumes:
      - ${PWD}/certs:/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DEPLOY_DOCKER_CONTAINER_LABEL=sh.acme.autoload.domain=${BASE_DOMAIN}
      - DEPLOY_DOCKER_CONTAINER_KEY_FILE=/etc/nginx/ssl/${BASE_DOMAIN}/key.pem
      - DEPLOY_DOCKER_CONTAINER_CERT_FILE=/etc/nginx/ssl/${BASE_DOMAIN}/cert.pem
      - DEPLOY_DOCKER_CONTAINER_CA_FILE=/etc/nginx/ssl/${BASE_DOMAIN}/ca.pem
      - DEPLOY_DOCKER_CONTAINER_FULLCHAIN_FILE=/etc/nginx/ssl/${BASE_DOMAIN}/full.pem
      - DEPLOY_DOCKER_CONTAINER_RELOAD_CMD="service nginx force-reload"
    env_file:
      - path: .env
        required: true
      - path: .domains
        required: true
    networks:
      - reverseproxy
    profiles:
      - core

  actual_server:
    image: docker.io/actualbudget/actual-server:latest
    ports:
      - '5006:5006'
    environment:
      - ACTUAL_UPLOAD_FILE_SYNC_SIZE_LIMIT_MB=20
      - ACTUAL_UPLOAD_SYNC_ENCRYPTED_FILE_SYNC_SIZE_LIMIT_MB=50
      - ACTUAL_UPLOAD_FILE_SIZE_LIMIT_MB=20
      - DEBUG=actual:config
    volumes:
      - /media/external/budget:/data
      - ${PWD}/certs/:/certs
    restart: unless-stopped
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy
    profiles:
      - actual_server

  portainer_agent:
    image: portainer/agent:2.19.4
    ports:
      - '9001:9001'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    restart: always
    networks:
      - reverseproxy
    profiles:
      - portainer_agent

  photoprism:
    image: photoprism/photoprism:latest
    stop_grace_period: 10s
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - "2342:2342"
    environment:
      PHOTOPRISM_ADMIN_USER: "admin"
      PHOTOPRISM_ADMIN_PASSWORD: "insecure"
      PHOTOPRISM_AUTH_MODE: "password"
      PHOTOPRISM_SITE_URL: "https://${DOMAIN_PHOTOPRISM}/"
      PHOTOPRISM_DISABLE_TLS: "false"
      PHOTOPRISM_DEFAULT_TLS: "false"
      PHOTOPRISM_ORIGINALS_LIMIT: 5000
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"
      PHOTOPRISM_LOG_LEVEL: "info"
      PHOTOPRISM_READONLY: "false"
      PHOTOPRISM_EXPERIMENTAL: "true"
      PHOTOPRISM_DISABLE_CHOWN: "false"
      PHOTOPRISM_DISABLE_WEBDAV: "false"
      PHOTOPRISM_DISABLE_SETTINGS: "false"
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"
      PHOTOPRISM_DISABLE_FACES: "false"
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"
      PHOTOPRISM_DISABLE_VECTORS: "false"
      PHOTOPRISM_DISABLE_RAW: "false"
      PHOTOPRISM_RAW_PRESETS: "false"
      PHOTOPRISM_JPEG_QUALITY: 85
      PHOTOPRISM_DETECT_NSFW: "true"
      PHOTOPRISM_UPLOAD_NSFW: "true"
      PHOTOPRISM_DATABASE_DRIVER: "mysql"
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"
      PHOTOPRISM_DATABASE_NAME: "photoprism"
      PHOTOPRISM_DATABASE_USER: "photoprism"
      PHOTOPRISM_DATABASE_PASSWORD: "insecure"
      PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
      PHOTOPRISM_SITE_DESCRIPTION: ""
      PHOTOPRISM_SITE_AUTHOR: ""
      PHOTOPRISM_FFMPEG_ENCODER: "nvidia"
      NVIDIA_VISIBLE_DEVICES: "all"
      NVIDIA_DRIVER_CAPABILITIES: "compute,video,utility"
      PHOTOPRISM_INIT: "gpu tensorflow"
    working_dir: "/photoprism"
    volumes:
      - "/media/external:/photoprism/originals"
      - "${PWD}/photoprism:/photoprism/storage"
    deploy:
      resources:
        reservations:
          devices:
            - driver: "nvidia"
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2342/api/v1/status"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - mariadb
    networks:
      - reverseproxy
    profiles:
      - photoprism

  mariadb:
    image: mariadb:11
    restart: unless-stopped
    stop_grace_period: 5s
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    command: --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    volumes:
      - "${PWD}/photoprism/database:/var/lib/mysql"
    environment:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
      MARIADB_DATABASE: "photoprism"
      MARIADB_USER: "photoprism"
      MARIADB_PASSWORD: "insecure"
      MARIADB_ROOT_PASSWORD: "insecure"
    networks:
      - reverseproxy
    profiles:
      - photoprism

  emby:
    image: emby/embyserver:4.9.0.4
    container_name: embyserver
    environment:
      - UID=1000
      - GID=100
      - GIDLIST=100
    volumes:
      - ${PWD}/embyserver:/config
      - /media/external:/mnt/external
    ports:
      - 8096:8096
      - 8920:8920
    restart: on-failure
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy
    profiles:
      - emby

  librechat:
    image: ghcr.io/danny-avila/librechat:v0.6.6
    container_name: LibreChat
    ports:
      - 3080:3080
    depends_on:
      - mongodb
      - meilisearch
      - reverseproxy
    restart: always
    user: "${UID}:${GID}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - path: ./librechat/.env
        required: true
    volumes:
      - ./images:/app/client/public/images
    networks:
      - reverseproxy
    profiles:
      - librechat

  mongodb:
    container_name: chat-mongodb
    image: nertworkweb/mongodb-no-avx
    restart: always
    user: "${UID}:${GID}"
    ports:
      - 27017:27017
    volumes:
      - ./data-node:/data/db
    command: --noauth --bind_ip_all
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy
    profiles:
      - librechat

  meilisearch:
    container_name: chat-meilisearch
    image: getmeili/meilisearch:v1.5
    restart: always
    user: "${UID}:${GID}"
    environment:
      - MEILI_HOST=http://meilisearch:7700
      - MEILI_NO_ANALYTICS=true
    volumes:
      - ./meili_data_v1.5:/meili_data
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy
    profiles:
      - librechat

  cryptpad:
    image: "cryptpad/cryptpad:version-2024.12.0"
    hostname: cryptpad
    environment:
      - CPAD_MAIN_DOMAIN=https://${DOMAIN_CRYPTPAD}
      - CPAD_SANDBOX_DOMAIN=https://${DOMAIN_CRYPTPAD_SANDBOX}
      - CPAD_CONF=/cryptpad/config/config.json
      - CPAD_INSTALL_ONLYOFFICE=yes
    user: "4001:4001"
    volumes:
      - ${PWD}/cryptpad/data/blob:/cryptpad/blob
      - ${PWD}/cryptpad/data/block:/cryptpad/block
      - ${PWD}/cryptpad/customize:/cryptpad/customize
      - ${PWD}/cryptpad/data/data:/cryptpad/data
      - ${PWD}/cryptpad/data/files:/cryptpad/datastore
      - ${PWD}/cryptpad/onlyoffice-dist:/cryptpad/www/common/onlyoffice/dist
      - ${PWD}/cryptpad/onlyoffice-conf:/cryptpad/onlyoffice-conf
      - ${PWD}/cryptpad/config.js:/cryptpad/config/config.js
    ports:
      - "3000:3000"
      - "3003:3003"
    env_file:
      - path: .domains
        required: true
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    healthcheck:
      test: 'curl -m 90 -sLf http://0.0.0.0:3000 || date >> /config/healthcheck'
      interval: 90s
      timeout: 60s
      retries: 2
    dns:
      - ${DNS_SERVER}
    networks:
      - reverseproxy
    profiles:
      - cryptpad

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ${PWD}/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 8181:8181
    restart: unless-stopped
    privileged: true
    healthcheck:
      test: 'curl -m 90 -sLf http://0.0.0.0:8123 || date >> /config/healthcheck'
      interval: 90s
      timeout: 60s
      retries: 2
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy
    profiles:
      - homeassistant

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ${PWD}/radarr:/config
      - /media/external/media:/data
    ports:
      - 7878:7878
    restart: unless-stopped
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy
    profiles:
      - radarr

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=${TZ}
    volumes:
      - ${PWD}/sonarr:/config
      - /media/external/media:/data
    ports:
      - 8989:8989
    restart: unless-stopped
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy
    profiles:
      - sonarr

  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    volumes:
      - ${PWD}/deluge:/config
      - /media/external/media/torrents:/data/torrents
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - DELUGE_LOGLEVEL=info
    ports:
      - 8112:8112
    restart: unless-stopped
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy
    profiles:
      - deluge

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - WEBUI_PORT=8080
    volumes:
      - ${PWD}/qbittorrent:/config
      - /media/external/media/torrents:/data/torrents
    ports:
      - 8080:8080
    restart: unless-stopped
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy
    profiles:
      - qbittorrent

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ${PWD}/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy
    profiles:
      - prowlarr

networks:
  reverseproxy:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/16
