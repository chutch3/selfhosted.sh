version: "3"
services:
  reverseproxy:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${PWD}/certs:/etc/nginx/certs:ro
      - ${PWD}/reverseproxy/conf.d/available:/etc/nginx/conf.d/available:ro
      - ${PWD}/reverseproxy/conf.d/enabled:/etc/nginx/conf.d/enabled:ro
      - ${PWD}/reverseproxy/includes:/etc/nginx/includes:ro
      - ${PWD}/reverseproxy/ssl:/etc/nginx/ssl:ro
      - ${PWD}/reverseproxy/backend-not-found.html:/var/www/html/backend-not-found.html:ro
      - ${PWD}/reverseproxy/default.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      - TZ=America/New_York
    command: >
      /bin/sh -c "nginx -g 'daemon off;'"
    restart: always
    networks:
      - reverseproxy

  actual_budget:
    image: docker.io/actualbudget/actual-server:latest
    ports:
      # This line makes Actual available at port 5006 of the device you run the server on,
      # i.e. http://localhost:5006. You can change the first number to change the port, if you want.
      - '5006:5006'
    environment:
      - ACTUAL_HTTPS_KEY=/certs/selfhost.key
      - ACTUAL_HTTPS_CERT=/certs/selfhost.crt
      - ACTUAL_UPLOAD_FILE_SYNC_SIZE_LIMIT_MB=20
      - ACTUAL_UPLOAD_SYNC_ENCRYPTED_FILE_SYNC_SIZE_LIMIT_MB=50
      - ACTUAL_UPLOAD_FILE_SIZE_LIMIT_MB=20
      - DEBUG=actual:config
      # See all options and more details at https://actualbudget.github.io/docs/Installing/Configuration
    volumes:
      - /media/external/budget:/data
      - ${PWD}/certs/client.key:/certs/selfhost.key
      - ${PWD}/certs/client.pem:/certs/selfhost.crt
    restart: unless-stopped
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy

  portainer_agent:
    image: portainer/agent:2.19.4
    ports:
      - '9001:9001'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    restart: always
    networks:
      - reverseproxy

  photoprism:
    ## Use photoprism/photoprism:preview for testing preview builds:
    image: photoprism/photoprism:latest
    ## Don't enable automatic restarts until PhotoPrism has been properly configured and tested!
    ## If the service gets stuck in a restart loop, this points to a memory, filesystem, network, or database issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    # restart: unless-stopped
    stop_grace_period: 10s
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ## Server port mapping in the format "Host:Container". To use a different port, change the host port on
    ## the left-hand side and keep the container port, e.g. "80:2342" (for HTTP) or "443:2342 (for HTTPS):
    ports:
      - "2342:2342"
    ## Before you start the service, please check the following config options (and change them as needed):
    ## https://docs.photoprism.app/getting-started/config-options/
    environment:
      PHOTOPRISM_ADMIN_USER: "admin"                 # admin login username
      PHOTOPRISM_ADMIN_PASSWORD: "insecure"          # initial admin password (8-72 characters)
      PHOTOPRISM_AUTH_MODE: "password"               # authentication mode (public, password)
      PHOTOPRISM_SITE_URL: "http://localhost:2342/"  # server URL in the format "http(s)://domain.name(:port)/(path)"
      PHOTOPRISM_DISABLE_TLS: "false"                # disables HTTPS/TLS even if the site URL starts with https:// and a certificate is available
      PHOTOPRISM_DEFAULT_TLS: "true"                 # defaults to a self-signed HTTPS/TLS certificate if no other certificate is available
      PHOTOPRISM_ORIGINALS_LIMIT: 5000               # file size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_LOG_LEVEL: "info"                   # log level: trace, debug, info, warning, error, fatal, or panic
      PHOTOPRISM_READONLY: "false"                   # do not modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "true"               # enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "false"              # disables updating storage permissions via chmod and chown on startup
      PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables settings UI and API
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false"              # disables face detection and recognition (requires TensorFlow)
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification (requires TensorFlow)
      PHOTOPRISM_DISABLE_VECTORS: "false"            # disables vector graphics support
      PHOTOPRISM_DISABLE_RAW: "false"                # disables indexing and conversion of RAW images
      PHOTOPRISM_RAW_PRESETS: "false"                # enables applying user presets when converting RAW images (reduces performance)
      PHOTOPRISM_JPEG_QUALITY: 85                    # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
      PHOTOPRISM_DETECT_NSFW: "true"                # automatically flags photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive (no effect without TensorFlow)
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"     # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "photoprism"         # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: "photoprism"         # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: "insecure"       # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
      PHOTOPRISM_SITE_DESCRIPTION: ""                # meta site description
      PHOTOPRISM_SITE_AUTHOR: ""                     # meta site author
      PHOTOPRISM_FFMPEG_ENCODER: "nvidia"
      NVIDIA_VISIBLE_DEVICES: "all"
      NVIDIA_DRIVER_CAPABILITIES: "compute,video,utility"
      ## Video Transcoding (https://docs.photoprism.app/getting-started/advanced/transcoding/):
      # PHOTOPRISM_FFMPEG_ENCODER: "software"        # H.264/AVC encoder (software, intel, nvidia, apple, raspberry, or vaapi)
      # PHOTOPRISM_FFMPEG_SIZE: "1920"               # video size limit in pixels (720-7680) (default: 3840)
      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # video bitrate limit in Mbit/s (default: 50)
      ## Run/install on first startup (options: update https gpu tensorflow davfs clitools clean):
      PHOTOPRISM_INIT: "gpu tensorflow"
      ## Run as a non-root user after initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
      # PHOTOPRISM_UID: 1000
      # PHOTOPRISM_GID: 1000
      # PHOTOPRISM_UMASK: 0000
    ## Start as non-root user before initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
    # user: "1000:1000"
    ## Share hardware devices with FFmpeg and TensorFlow (optional):
    # devices:
    #  - "/dev/dri:/dev/dri"                         # Intel QSV
    #  - "/dev/nvidia0:/dev/nvidia0"                 # Nvidia CUDA
    #  - "/dev/nvidiactl:/dev/nvidiactl"
    #  - "/dev/nvidia-modeset:/dev/nvidia-modeset"
    #  - "/dev/nvidia-nvswitchctl:/dev/nvidia-nvswitchctl"
    #  - "/dev/nvidia-uvm:/dev/nvidia-uvm"
    #  - "/dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools"
    #  - "/dev/video11:/dev/video11"                 # Video4Linux Video Encode Device (h264_v4l2m2m)
    working_dir: "/photoprism" # do not change or remove
    ## Storage Folders: "~" is a shortcut for your home directory, "." for the current directory
    volumes:
      - "/media/external:/photoprism/originals"               # Original media files (DO NOT REMOVE)
      # - "/example/family:/photoprism/originals/family" # *Additional* media folders can be mounted like this
      # - "~/Import:/photoprism/import"                  # *Optional* base folder from which files can be imported to originals
      - "${PWD}/photoprism:/photoprism/storage"                  # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMO
    deploy:
      resources:
        reservations:
          devices:
            - driver: "nvidia"
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2342/api/v1/status"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - mariadb
    networks:
      - reverseproxy

  ## Database Server (recommended)
  ## see https://docs.photoprism.app/getting-started/faq/#should-i-use-sqlite-mariadb-or-mysql
  mariadb:
    image: mariadb:11
    ## If MariaDB gets stuck in a restart loop, this points to a memory or filesystem issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    restart: unless-stopped
    stop_grace_period: 5s
    security_opt: # see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
      - seccomp:unconfined
      - apparmor:unconfined
    command: --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    ## Never store database files on an unreliable device such as a USB flash drive, an SD card, or a shared network folder:
    volumes:
      - "${PWD}/photoprism/database:/var/lib/mysql" # DO NOT REMOVE
    environment:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
      MARIADB_DATABASE: "photoprism"
      MARIADB_USER: "photoprism"
      MARIADB_PASSWORD: "insecure"
      MARIADB_ROOT_PASSWORD: "insecure"
    networks:
      - reverseproxy

  emby:
    image: emby/embyserver:4.9.0.4
    container_name: embyserver
    environment:
      - UID=1000
      - GID=100
      - GIDLIST=100
    volumes:
      - ${PWD}/embyserver:/config
      - /media/external:/mnt/external
    ports:
      - 8096:8096
      - 8920:8920
    restart: on-failure
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy

  librechat:
    image: ghcr.io/danny-avila/librechat:v0.6.6
    container_name: LibreChat
    ports:
      - 3080:3080
    depends_on:
      - mongodb
      - meilisearch
      - reverseproxy
    restart: always
    user: "${UID}:${GID}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - path: ./librechat/.env
        required: true
    volumes:
      - ./images:/app/client/public/images
    networks:
      - reverseproxy

  mongodb:
    container_name: chat-mongodb
    image: nertworkweb/mongodb-no-avx
    restart: always
    user: "${UID}:${GID}"
    ports:
      - 27017:27017
    volumes:
      - ./data-node:/data/db
    command: --noauth --bind_ip_all
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy

  meilisearch:
    container_name: chat-meilisearch
    image: getmeili/meilisearch:v1.5
    restart: always
    user: "${UID}:${GID}"
    environment:
      - MEILI_HOST=http://meilisearch:7700
      - MEILI_NO_ANALYTICS=true
    volumes:
      - ./meili_data_v1.5:/meili_data
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy

  cryptpad:
    image: "cryptpad/cryptpad:version-2024.12.0"
    hostname: cryptpad
    environment:
      - CPAD_MAIN_DOMAIN=https://drive.lab.local
      - CPAD_SANDBOX_DOMAIN=https://sandbox.drive.lab.local
      - CPAD_CONF=/cryptpad/config/config.js
      # Read and accept the license before uncommenting the following line:
      # https://github.com/ONLYOFFICE/web-apps/blob/master/LICENSE.txt
      # - CPAD_INSTALL_ONLYOFFICE=yes
    volumes:
      - ./data/blob:/cryptpad/blob
      - ./data/block:/cryptpad/block
      - ./customize:/cryptpad/customize
      - ./data/data:/cryptpad/data
      - ./data/files:/cryptpad/datastore
      - ./onlyoffice-dist:/cryptpad/www/common/onlyoffice/dist
      - ./onlyoffice-conf:/cryptpad/onlyoffice-conf
    ports:
      - "3000:3000"
      - "3003:3003"
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy
  

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ${PWD}/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 8181:8181
    restart: unless-stopped
    privileged: true
    healthcheck:
      test: 'curl -m 90 -sLf http://0.0.0.0:8123 || date >> /config/healthcheck'
      interval: 90s
      timeout: 60s
      retries: 2
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - ${PWD}/radarr:/config
      - /media/external/media:/data
    ports:
      - 7878:7878
    restart: unless-stopped
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/New_York
    volumes:
      - ${PWD}/sonarr:/config
      - /media/external/media:/data
    ports:
      - 8989:8989
    restart: unless-stopped
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy

  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    volumes:
      - ${PWD}/deluge:/config
      - /media/external/media/torrents:/data/torrents
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - DELUGE_LOGLEVEL=info
    ports:
      - 8112:8112
    restart: unless-stopped
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - WEBUI_PORT=8080
    volumes:
      - ${PWD}/qbittorrent:/config
      - /media/external/media/torrents:/data/torrents
    ports:
      - 8080:8080
    restart: unless-stopped
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - ${PWD}/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    depends_on:
      - reverseproxy
    networks:
      - reverseproxy

networks:
  reverseproxy:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/16
